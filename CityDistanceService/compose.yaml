services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        env_file: 
            - path: "DefaultAppEnv.env"
              required: true # default env file
            - path: "ProductionAppEnv.env"
              required: false # production env file -> overrides values from DefaultAppEnv.env if set
        ports:
            - "8080:8080"
        depends_on:
            - db
        networks:
            - cdsNetwork

    db:
        image: mysql:latest
        env_file: 
            - path: "DefaultDatabaseEnv.env"
              required: true # default env file
            - path: "ProductionDatabaseEnv.env"
              required: false # production env file -> overrides values from DefaultDatabaseEnv.env if set
        volumes:
            - ./MySQLInit.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - cdsNetwork
    
    nginx:
        image: nginx:latest
        container_name: nginx_reverse_proxy
        ports:
            - "8443:443"
        depends_on:
            - app
        networks:
            - cdsNetwork
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/certs:/etc/nginx/certs
            # - ./nginx/logs:/nginx/logs
    
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
        container_name: elasticsearch
        environment: 
            - discovery.type=single-node
            - ELASTIC_PASSWORD=secretPwd123 # TODO: remove hardcoded password, probably will be managed through an env file
        ports:
            - "9200:9200"
        networks:
            - cdsNetwork
        volumes:
            - ./elasticsearch/data:/usr/share/elasticsearch/data

networks:
    cdsNetwork: {}

volumes:
    db_data: {}
